# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-05-13 20:46
from __future__ import unicode_literals

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import practicas.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(unique=True, verbose_name='fecha de inicio')),
                ('end', models.DateField(unique=True, verbose_name='Fecha de finalización')),
            ],
            options={
                'verbose_name': 'curso',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='nombre')),
                ('years', models.IntegerField(validators=[
                    django.core.validators.MinValueValidator(1, message='Toda carrera debe durar más de 1 año.')],
                                              verbose_name='número de años')),
            ],
            options={
                'verbose_name': 'carrera',
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposed_grade', models.PositiveIntegerField(blank=True, null=True, validators=[
                    django.core.validators.MaxValueValidator(5, 'La máxima calificación es 5.')],
                                                               verbose_name='calificación propuesta')),
                ('grade', models.PositiveIntegerField(blank=True, null=True, validators=[
                    django.core.validators.MaxValueValidator(5, 'La máxima calificación es 5.')],
                                                      verbose_name='calificación')),
                ('report', models.FileField(blank=True, storage=practicas.models.OverwriteStorage(
                    location='D:\\EDDY\\Zchool\\Computer Science\\3º\\V Semestre\\Sistemas de Bases de Datos II\\Proyecto. Prácticas laborales de MATCOM\\bd\\media'),
                                            upload_to=practicas.models.make_participation_student_report_name,
                                            verbose_name='informe del estudiante')),
                ('tutor_report', models.FileField(blank=True, storage=practicas.models.OverwriteStorage(
                    location='D:\\EDDY\\Zchool\\Computer Science\\3º\\V Semestre\\Sistemas de Bases de Datos II\\Proyecto. Prácticas laborales de MATCOM\\bd\\media'),
                                                  upload_to=practicas.models.make_participation_tutor_report_name,
                                                  verbose_name='informe del tutor')),
            ],
            options={
                'verbose_name_plural': 'participaciones',
                'verbose_name': 'participación',
            },
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(unique=True, verbose_name='fecha de inicio')),
                ('end', models.DateField(unique=True, verbose_name='fecha de finalización')),
                ('year', models.IntegerField(validators=[
                    django.core.validators.MinValueValidator(1, message='Las carreras comienzan a partir del año 1.')],
                                             verbose_name='año')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Course',
                                             verbose_name='curso')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Major',
                                            verbose_name='carrera')),
            ],
            options={
                'verbose_name': 'práctica',
            },
        ),
        migrations.CreateModel(
            name='PracticeManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Practice',
                                               verbose_name='práctica')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                              verbose_name='usuario')),
            ],
            options={
                'verbose_name_plural': 'jefes de prácticas',
                'permissions': [('manager_permissions', 'Tiene permisos de jefe de practicas')],
                'verbose_name': 'jefe de prácticas',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nombre')),
                ('description', models.TextField(verbose_name='descripción')),
                ('report', models.FileField(blank=True, storage=practicas.models.OverwriteStorage(
                    location='D:\\EDDY\\Zchool\\Computer Science\\3º\\V Semestre\\Sistemas de Bases de Datos II\\Proyecto. Prácticas laborales de MATCOM\\bd\\media'),
                                            upload_to=practicas.models.make_project_report_name,
                                            verbose_name='informe del tutor')),
                ('slug', models.SlugField(editable=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Course',
                                             verbose_name='curso')),
                ('practices', models.ManyToManyField(to='practicas.Practice', verbose_name='prácticas')),
            ],
            options={
                'verbose_name': 'proyecto',
            },
        ),
        migrations.CreateModel(
            name='RegisteredStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=200, verbose_name='grupo')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Course',
                                             verbose_name='curso')),
                ('practice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Practice',
                                               verbose_name='práctica')),
            ],
            options={
                'verbose_name_plural': 'estudiantes registrados',
                'verbose_name': 'estudiante registrado',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveIntegerField(default=1, verbose_name='prioridad')),
                ('checked', models.BooleanField(default=False, verbose_name='confirmación del tutor')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Project',
                                              verbose_name='proyecto')),
                ('reg_student',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.RegisteredStudent',
                                   verbose_name='estudiante registrado')),
            ],
            options={
                'verbose_name_plural': 'solicitudes',
                'verbose_name': 'solicitud',
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1,
                                                                                                  message='Toda carrera tiene duración mayor que 1 año.')],
                                             verbose_name='año')),
                ('students_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1,
                                                                                                            'En el proyecto debe participar al menos 1 estudiante.')],
                                                       verbose_name='cantidad de estudiantes')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Major',
                                            verbose_name='carrera')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Project',
                                              verbose_name='proyecto')),
            ],
            options={
                'verbose_name': 'requisito',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                              verbose_name='usuario')),
            ],
            options={
                'permissions': [('student_permissions', 'Tiene permisos de estudiante')],
                'verbose_name': 'estudiante',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category',
                 models.CharField(choices=[('DR', 'Doctor'), ('MSC', 'Master'), ('LIC', 'Licenciado')], max_length=3,
                                  verbose_name='categoría científica')),
                ('job', models.CharField(max_length=200, verbose_name='puesto')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                              verbose_name='usuario')),
            ],
            options={
                'verbose_name_plural': 'tutores',
                'permissions': [('tutor_permissions', 'Tiene permisos de tutor')],
            },
        ),
        migrations.CreateModel(
            name='Workplace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='nombre')),
                ('address', models.CharField(max_length=250, verbose_name='dirección')),
                ('phone', models.PositiveIntegerField(verbose_name='teléfono')),
            ],
            options={
                'verbose_name_plural': 'centros de trabajo',
                'verbose_name': 'centro de trabajo',
            },
        ),
        migrations.AddField(
            model_name='tutor',
            name='workplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Workplace',
                                    verbose_name='centro de trabajo'),
        ),
        migrations.AddField(
            model_name='registeredstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Student',
                                    verbose_name='estudiante'),
        ),
        migrations.AddField(
            model_name='project',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Tutor'),
        ),
        migrations.AddField(
            model_name='participation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practicas.Project',
                                    verbose_name='proyecto'),
        ),
        migrations.AddField(
            model_name='participation',
            name='reg_student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='practicas.RegisteredStudent',
                                       verbose_name='estudiante registrado'),
        ),
        migrations.AlterUniqueTogether(
            name='requirement',
            unique_together=set([('project', 'major', 'year')]),
        ),
        migrations.AlterUniqueTogether(
            name='request',
            unique_together=set([('reg_student', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='registeredstudent',
            unique_together=set([('student', 'course')]),
        ),
        migrations.AlterUniqueTogether(
            name='practicemanager',
            unique_together=set([('user', 'practice')]),
        ),
    ]
